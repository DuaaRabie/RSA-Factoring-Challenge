#!/usr/bin/python3
import sys
import random
from math import sqrt
from math import gcd

def rho_fun(n):
    if n % 2 == 0:
        return 2
    x = 2; y = 2; d = 1
    f = lambda x: (x**2 + 1) % n
    while d == 1:
        x = f(x)
        y = f(f(y))
        d = gcd(abs(x-y), n)
    return d

def modular_pow(base, exponent, modulus):
    result = 1
    while exponent > 0:
        if exponent & 1:
            result = (result * base) % modulus
        exponent = exponent >> 1
        base = (base * base) % modulus
    return result

def pollard_rho(n):
    if n == 1:
        return n
    if n % 2 == 0:
        return 2
    x = (random.randint(0, 2) % (n - 2))
    y = x
    c = (random.randint(0, 1) % (n - 1))
    d = 1
    while d == 1:
        x = (modular_pow(x, 2, n) + c + n) % n
        y = (modular_pow(y, 2, n) + c + n) % n
        y = (modular_pow(y, 2, n) + c + n) % n
        d = gcd(abs(x - y), n)
        if d == n:
            return pollard_rho(n)
    return d

if len(sys.argv) != 2:
    print("Usage: factors <file>")
    sys.exit(1)
try:
    with open(sys.argv[1], 'r') as file:
        for line in file:
            number = int(line)
            check = 0
            if check == 0:
                #print("{}={}*{}".format(number, number // rho_fun(number), rho_fun(number)))
                print("{}={}*{}".format(number, number // pollard_rho(number), pollard_rho(number)))
except IOError:
    print("Can't read the file")
    sys.exit(1)
